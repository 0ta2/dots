#
# 環境変数
#
# brew
eval "$(/opt/homebrew/bin/brew shellenv)"

# mise
eval "$(mise activate zsh)"

# starship
eval "$(starship init zsh)"

#
# zim
#
# Download zimfw plugin manager if missing.
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
      https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
fi

# Install missing modules and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZIM_CONFIG_FILE:-${ZDOTDIR:-${HOME}}/.zimrc} ]]; then
  source ${ZIM_HOME}/zimfw.zsh init
fi

# Initialize modules.
source ${ZIM_HOME}/init.zsh

#
# zsh
#
# `/` を単語の一部として扱わない
# default: *?_-.[]~=/&;!#$%^(){}<>
WORDCHARS=${WORDCHARS//[\/]}

# keymap を emacs モードに設定
bindkey -e

# 重複するコマンドを追加する場合は、履歴から古いコマンドを削除
setopt HIST_IGNORE_ALL_DUPS

# 隠しファイル補完候補に表示
setopt globdots

# 補完が多い時に詰めて表示
setopt list_packed

# 補完候補一覧でファイルの種別を識別マーク表示
setopt list_types

## PATH補完時に `/` をつける
setopt noautoremoveslash

# バックグラウンドのジョブが終了したら知らせる
setopt no_tify

# 自動補完される余分なカンマなどを適宜削除してスムーズに入力できるようにする
setopt auto_param_keys

# 語の途中でもカーソル位置で補完
setopt complete_in_word

# カーソル位置は、保持したままファイル名一覧を順次その場で表示
setopt always_last_prompt

# コマンドラインでも # 以降をコメントとみなす
setopt interactive_comments

# コマンドラインの引数で --prefix= などの = 以降でも補完できるようにする
setopt magic_equal_subst

# メモリに保存される履歴の件数(保存数だけ履歴を検索できる)
HISTSIZE=50000

# HISTFILE で指定したファイルに保存される履歴の件数
SAVEHIST=50000

# path=xxxx(N-/)
#   (N-/): ディレクトリが存在する場合のみ登録
#   パス(...): ...という条件にマッチするパスのみ残す
#      N: NULL_GLOBオプションを設定。
#         globがマッチしない場合は空になる（エラーを出さない）
#      -: シンボリックリンクを辿って評価
#      /: ディレクトリのみを対象とする
#      .: 通常のファイルのみを対象とする
# 基本PATH設定
# ${path} は､大文字の PATH と紐付いている
path=(
  ${HOME}/.local/bin(N-/)
  ${path}
)

#
# module
#
# zsh-syntax-highlighting
# See: https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters.md
ZSH_HIGHLIGHT_HIGHLIGHTERS+=(brackets cursor)

# zsh-history-substring-search
# See: https://github.com/zsh-users/zsh-history-substring-search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
#bindkey -M emacs '^P' history-substring-search-up
#bindkey -M emacs '^N' history-substring-search-down

bindkey '^P' history-substring-search-up
bindkey '^N' history-substring-search-down

# 重複する履歴を除外
HISTORY_SUBSTRING_SEARCH_ENSURE_UNIQUE=1

# terminfo
[[ -n "$terminfo[kcuu1]" ]] || bindkey '^[[A' history-substring-search-up
[[ -n "$terminfo[kcud1]" ]] || bindkey '^[[B' history-substring-search-down

#
# custom
#
# fpath
for funcs in ${ZDOTDIR}/functions/*.zsh; do
  source $funcs
done

# 環境変数
# less コマンドの環境変数
# --ignore-case 検索時に大文字小文字を区別しない
# --LONG-PROMPT 詳細なプロンプト表示
# --RAW-CONTROL-CHARS ANSI色付けシーケンスを表示
# --HILITE-UNREAD まだ読んでいない行をハイライト
export LESS='--ignore-case --LONG-PROMPT --RAW-CONTROL-CHARS --HILITE-UNREAD'

# neovim
export EDITOR="nvim"

# tmux
if [[ -n "${TMUX}" ]]; then
    export FZF_DEFAULT_OPTS="--tmux"
fi

# alias
alias vim="nvim"
alias c="clear"

# GNU
alias sed="gsed"
alias ls="gls --color=auto"
